version: 2
jobs:
  build:
    working_directory: ~/tmp
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore-cache:
          keys:
            - v1-dependencies-{{ checksum "backend/package.json" }}
            - vi-dependencies-
      - run:
          name: Installing modules
          command: cd backend/ && npm ci
      - save-cache:
          paths:
            - ./backend/node_modules
          key: v1-dependencies-{{  checksum "backend/package.json" }}
      - run:
          name: Building backend code
          command: cd backend/ && npm run build

  deploy:
    working_directory: ~/tmp
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: Listing environment variables
          command: printenv
      - run:
          name: Extracting environment variables
          command: printenv >> infrastructure/terraform.tfvars
      - restore-cache:
          keys:
            - v1-infrastructure-{{ checksum "infrastructure/terraform.tfstate" }}
      - run:
          name: Initialising terraform
          command: cd infrastructure/ && terraform init -reconfigure -force-copy -backend=true -backend-config "bucket=geet-tf-state-bucket" -backend-config "key=terraform.tfstate" -backend-config "region=us-west-2"
      - run:
          name: Executing plan
          command: cd infrastructure/ && terraform plan -var-file='./terraform.tfvars' -out .terraform/service.tfplan
      - run:
          name: Applying infrastructure
          command: cd infrastructure/ && terraform apply -auto-approve .terraform/service.tfplan
      - save-cache:
          paths:
            - ./infrastructure/.terraform
          key: v1-infrastructure-{{  checksum "infrastructure/terraform.tfstate" }}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy